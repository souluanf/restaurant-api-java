restaurant-api:
  oidc:
    client-id: restaurant-api
    issuer-uri: ${KEYCLOAK_URL}/realms/desafio
    token-uri: ${spring.security.oauth2.resource-server.jwt.issuer-uri}/protocol/openid-connect/token
    jwk-set-uri: ${spring.security.oauth2.resource-server.jwt.issuer-uri}/protocol/openid-connect/certs
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 1
  jpa:
    open-in-view: false
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
    show-sql: false
    hibernate:
      ddl-auto: update
  springdoc:
    swagger-ui:
      enabled: true

  swagger-servers-urls: http://localhost:${server.port}${server.servlet.context-path}
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    queue:
      name: ${RABBITMQ_QUEUE_NAME}
      dlq:
        name: ${RABBITMQ_DLQ_NAME}
    exchange:
      name: ${RABBITMQ_EXCHANGE_NAME}
      dlq:
        name: ${RABBITMQ_DLQ_EXCHANGE_NAME}
    routing:
      key: ${RABBITMQ_ROUTING_KEY}
      dlq:
        key: ${RABBITMQ_DLQ_ROUTING_KEY}